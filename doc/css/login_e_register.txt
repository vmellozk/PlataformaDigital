1. Visão Geral do Arquivo
* Descrição do Arquivo:
O arquivo register.css é responsável por definir os estilos visuais da página de registro no projeto. Ele controla
a aparência dos elementos de interface, como o formulário de cadastro, botões, texto, e outros componentes da
página. Sua função principal é garantir que a página tenha uma aparência consistente e atraente, melhorando a
experiência do usuário e garantindo que o design se alinhe com a identidade visual do projeto.

* Relação com Outros Arquivos:
Este arquivo CSS está intimamente relacionado com o arquivo register.html, onde os estilos definidos aqui são
aplicados aos elementos HTML. Ele também pode estar vinculado a outros arquivos CSS globais ou específicos que
definem estilos comuns ou adicionais para outras partes do sistema. Além disso, o arquivo utiliza uma fonte
importada do Google Fonts, que deve ser carregada para que o estilo do texto funcione corretamente.



2. Estrutura do Código e Organização
* Organização Interna:
O código CSS no arquivo register.css é organizado de forma lógica e modular. Ele começa com a importação de uma
fonte externa e a definição de variáveis CSS (utilizando :root) para armazenar cores e outros valores reutilizáveis.
Em seguida, são aplicados estilos gerais ao documento, como o reset de margens e a aplicação de uma fonte padrão.
Após isso, há blocos específicos de estilo para diferentes componentes da página, como o cabeçalho, navegação,
formulário de cadastro, e efeitos de animação.



3. Blocos de Código e Funções:
* Importação da Fonte
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

Descrição: Importa a fonte 'Poppins' do Google Fonts para uso no projeto.

* Variáveis Globais
Interação com Outros Blocos: Usado em diversos seletores para garantir consistência de cores.
Ex:
:root {
    --main-color: #0e0d0d;
    --text-color: #FFFAFA;
    ...
}

* Estilos Globais
Descrição: Aplica reset de estilos e configurações gerais, como a fonte padrão e o comportamento do scroll.
Ex:
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    ...
}

* Estilos do Cabeçalho e Navegação
Descrição: Define estilos para o cabeçalho fixo, logo, e links de navegação.
Interação com Outros Blocos: Interage diretamente com o HTML para estilizar elementos visuais da navegação.
Ex:
header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    ...
}

* Estilos do Formulário de Cadastro
Descrição: Estilos específicos para o formulário de cadastro, incluindo inputs, botões, e placeholders.
Ex:
input[type="submit"] {
    width: 50%!important;
    cursor: pointer;  
    ...
}

* Animações
Descrição: Define animações para transições entre as telas de cadastro e login.
Ex:
@keyframes fadeInLeft {
    0% {
        opacity: 0;
        transform: translateX(-20px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

* Documentação Específica de Funções
Eventos e Manipuladores de Eventos:
Este arquivo CSS não manipula diretamente eventos, mas define efeitos de animação e transições que podem ser
disparados por eventos em arquivos JavaScript ou HTML.



4. Funções Associadas:
Animações fadeInLeft e fadeOutLeft: São usadas para transições suaves entre os formulários de login e cadastro.
Instruções de Configuração e Instalação



5. Dependências:
-Google Fonts: Necessário para a correta exibição da fonte 'Poppins'.
-HTML correspondente (register.html): Para aplicar corretamente os estilos definidos.

*Configurações Específicas:
- Nenhuma configuração específica é necessária além das dependências mencionadas.



6. Guia de Uso Geral
* Como Executar:
Este arquivo CSS é automaticamente referenciado e aplicado quando o register.html é carregado no navegador.

* Comandos Comuns:
Se necessário, o arquivo CSS pode ser minificado para otimizar a performance em produção.



7. Como Testar:
- Testes Manuais: Verifique visualmente a aplicação dos estilos na página de registro, especialmente as animações
e responsividade.
- Testes Automatizados: Pode-se usar ferramentas de teste de UI como o Percy para capturar screenshots e detectar
mudanças inesperadas no layout.

* Cobertura de Testes:
A cobertura de testes pode incluir a verificação das animações e da aplicação correta de estilos em diferentes
navegadores.



8. Erros e Solução de Problemas
* Erros Comuns:
- Fonte não carregada: Caso a fonte 'Poppins' não seja carregada, o texto pode aparecer em uma fonte padrão diferente.
- Problemas de Responsividade: Elementos fora de posição em diferentes tamanhos de tela.

* Debugging:
Utilize ferramentas de desenvolvedor no navegador para inspecionar estilos aplicados e identificar conflitos ou
overrides indesejados.



9. Histórico de Alterações
* Changelog Local:
- Data: [Exemplo: 2024-08-14]
- Versão: [Exemplo: 1.0]
- Descrição: [Exemplo: Primeira versão do arquivo CSS, estilização básica da página de registro].



10. Contribuição
* Estilo de Codificação:
- Seguir convenções de nomenclatura CSS, como o uso de hífen para separar palavras em classes (ex.: form-group).
- Organizar estilos em ordem hierárquica, começando por reset e estilos globais, seguidos por componentes específicos.

* Sugestões para Melhorias:
- Responsividade: Melhorar o layout para se adaptar ainda melhor a diferentes resoluções de tela.
- Acessibilidade: Considerar o uso de media queries adicionais para acessibilidade, como prefers-color-scheme.



11. Licenciamento e Direitos Autorais
* Licença:
[Comentário de uso pessoal: Informar a licença do projeto]

* Avisos Legais:
[Comentário de uso pessoal: Inserir quaisquer avisos legais, se aplicável]



12. Referências e Links Externos
* Documentação Externa:
Documentação Google Fonts

* Guia de CSS da Mozilla
Recursos de Aprendizado:

* Curso de CSS Flexbox
Animações CSS: Keyframes