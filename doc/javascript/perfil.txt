1. Visão Geral do Arquivo
* Descrição do Arquivo:
Este arquivo, "perfil.js", é responsável por gerenciar a lógica de interação do usuário com a página de perfil.
Suas principais funções incluem a manipulação de modais para edição de informações e troca de foto de perfil,
a atualização dinâmica dos dados do perfil exibidos na interface e a validação e contagem de caracteres dos
campos de entrada. Ele atua como a camada de frontend do backend da página de perfil, controlando as interações
do usuário e atualizando o DOM de acordo com as ações realizadas.

* Relação com Outros Arquivos:
- perfil.html: Este arquivo está fortemente integrado com o "perfil.html". Ele manipula elementos DOM identificados
por ID, que são definidos no HTML, para abrir/fechar modais, atualizar informações do perfil e gerenciar eventos
de formulários.
- perfil.css: Embora "perfil.js" não interaja diretamente com o CSS, ele influencia a aparência visual da página
ao manipular o DOM, que é estilizado pelo "perfil.css".



2. Estrutura do Código e Organização
* Organização Interna:
O código é organizado de forma funcional, onde as principais funções são agrupadas logicamente. As funções de
manipulação de eventos, como abertura e fechamento de modais, são seguidas pelas funções que atualizam o DOM
com os dados dos formulários. Por fim, o arquivo termina com um bloco de código que lida com a contagem de
caracteres em campos específicos.

* openModal(modalId)
- Descrição: Abre o modal especificado pelo ID fornecido.
- Parâmetros: modalId (string) - O ID do modal a ser aberto.
- Interação com Outros Blocos: Esta função interage com o DOM manipulando o estilo do modal especificado, tornando-o
- visível.
Exemplo Prático: openModal('editProfileModal') abre o modal de edição de perfil.

* closeModal(modalId)
- Descrição: Fecha o modal especificado pelo ID fornecido.
- Parâmetros: modalId (string) - O ID do modal a ser fechado.
- Interação com Outros Blocos: Esta função esconde o modal ao alterar seu estilo.
Exemplo Prático: closeModal('editProfileModal') fecha o modal de edição de perfil.

* Evento 'submit' no formulário de edição de perfil
- Descrição: Captura os dados do formulário de edição de perfil e os atualiza no DOM.
- Interação com Outros Blocos: Atualiza os elementos de perfil na página e fecha o modal de edição após o envio do
formulário.

* Evento 'submit' no formulário de troca de foto
- Descrição: Lê o arquivo de imagem selecionado e atualiza a foto de perfil no DOM.
- Interação com Outros Blocos: Atualiza a imagem do perfil e fecha o modal após a troca da foto.

* Evento 'change' no campo de upload de foto
- Descrição: Exibe uma pré-visualização da imagem selecionada antes de enviar.
- Interação com Outros Blocos: Atualiza o elemento DOM que exibe a pré-visualização da imagem.

* Contador de caracteres restantes
- Descrição: Atualiza dinamicamente o contador de caracteres restantes para os campos de entrada.
- Interação com Outros Blocos: Para cada campo de entrada, a função atualiza o texto do contador correspondente
no DOM.



3. Documentação Específica de Funções
* Eventos e Manipuladores de Eventos:

* Formulário de Edição de Perfil ('submit')
- Descrição: Captura e processa os dados de perfil editados pelo usuário.
- Funções Associadas: Atualiza os campos de perfil e fecha o modal de edição.

* Formulário de Troca de Foto ('submit')
- Descrição: Troca a foto de perfil do usuário.
- Funções Associadas: Atualiza a imagem do perfil e fecha o modal de troca de foto.

* Campo de Upload de Foto ('change')
- Descrição: Exibe uma pré-visualização da imagem selecionada.
- Funções Associadas: Mostra a pré-visualização da nova imagem de perfil.



4. Instruções de Configuração e Instalação
* Dependências:
Não há bibliotecas externas ou frameworks explícitos necessários para o funcionamento deste arquivo, além das
que o projeto já utiliza.

* Configurações Específicas:
Comentário de uso pessoal.




5. Guia de Uso Geral
* Como Executar:
Este arquivo é carregado automaticamente quando a página de perfil é acessada. Ele não precisa ser importado
manualmente.

* Comandos Comuns:
Comentário de uso pessoal.



6. Testes
* Como Testar:
- Testes Manuais: Interaja com os modais de perfil e troca de foto, edite informações e veja se são atualizadas
corretamente.
- Cobertura de Testes: Comentário de uso pessoal.



7. Erros e Solução de Problemas
* Erros Comuns:
- Modal Não Abre/Fecha: Verifique se o ID passado para openModal ou closeModal está correto e corresponde ao HTML.
- Dados Não Atualizam: Certifique-se de que os IDs dos elementos no HTML correspondem aos usados no JavaScript.

* Debugging:
Utilize console.log para verificar os valores capturados dos formulários e para garantir que os eventos estão
sendo acionados corretamente.



8. Histórico de Alterações
* Changelog Local:
- 17/07/24 - Criado o arquivo com a estilização inicial.
- 20/07/24 - Atualizado para incluir novos estilos e ajustar a aparência.

* Planejamento Futuro
- Fazer funcionar a edição dos produtos



9. Contribuição
* Guia para Contribuidores:
Sendo desenvolvedor da empresa: para contribuir com melhorias no estilo, edite o arquivo perfil.js e envie um
pull request com suas alterações.

* Estilo de Codificação:
Seguir convenções de nomenclatura CSS e manter comentários claros para facilitar a manutenção.



10. Licenciamento e Direitos Autorais
- Desenvolvedor: Victor Mello
- Licenciamento: Este arquivo está sujeito aos termos e condições estabelecidos pela licença descrita abaixo.
- Licença: Software Proprietário.
- Avisos Gerais: Não é permitido o uso ou modificações sem autorização.